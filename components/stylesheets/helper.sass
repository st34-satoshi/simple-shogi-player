=is_layer_border($color: $primary)
  border: 2px dashed change_color($color, $alpha: 0.5)

// 駒数の背景色とテキスト色を適用
%is_piece_count_color_set
  background-color: var(--sp_piece_count_bg_color)
  color:            var(--sp_piece_count_font_color)

// 領域を画像で埋める
// cover は、画像の全体を表示するのではなく、領域を埋めることを優先する
=is_background_cover_by_image
  background-position: center
  background-repeat: no-repeat
  background-size: cover

// 反転
%is_flip
  transform: rotate(180deg)

// 選択禁止
%is_unselectable
  user-select: none

// is_layer_on 用
=sp_xray_color($level)
  $color: hsla((240 + 360 / 15) * $level, 50%, 50%, 0.4)
  background-color: $color
  border: 1px solid darken($color, 50%)

// 共通の drop-shadow
=filter_drop_shadow($dir, $prepend: "", $append: "")
  filter: #{$prepend} drop-shadow(calc(var(--sp_shadow_offset) * #{$dir}px) calc(var(--sp_shadow_offset) * #{$dir}px) calc(var(--sp_shadow_blur) * 1px) var(--sp_shadow_color)) #{$append}

// 本当は :root の下に定義したい
// しかし node-sass だとエラーになる
// dart-sass だとエラーにならない
// しかし dart-sass は気が遠くなるほど遅い
// それと空定義に警告がでまくる
// なので :root のかわりに html にしている
// defvar はもともと dart-sass で「--xxx: 1 // コメント」の値が「1 // コメント」になる災いために作った
// node-sass の場合は「--xxx: 1 // コメント」としても「// コメント」を除去してくれるので必要ない
// けどあとあと変更が楽なのと1行で書けるのは便利なので使う
=defvar($key, $val)
  @at-root
    html
      --#{$key}: #{$val}

// pug:
//
//   .Foo
//     .FooTexture
//
// sass:
//
//   .Foo
//     +is_overlay_origin  // ← 親に relative が必要なので忘れるな
//     .FooTexture
//       +is_overlay_block
//
=is_overlay_origin
  position: relative
=is_overlay_block
  @extend %overlay
